{"ast":null,"code":"var _jsxFileName = \"/Users/adillon/Desktop/rbrfinder/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nimport LoadingSpinner from 'react-loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  zoomControlOptions: {\n    position: 'right-center'\n    // ...otherOptions\n  }\n};\n\nfunction App() {\n  _s();\n  const {\n    isLoaded,\n    loadError\n  } = useJsApiLoader({\n    googleMapsApiKey: \"AIzaSyDbPZdbJjDgRUObIF1iL1x50awNHPIU2jI\" // Replace with your API key\n    // ...otherOptions\n  });\n\n  if (loadError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Map cannot be loaded right now, sorry.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n  const onLoad = mapInstance => {\n    // do something with map Instance\n  };\n  const renderMap = () => {\n    return /*#__PURE__*/_jsxDEV(GoogleMap, {\n      options: options,\n      onLoad: onLoad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  };\n  return isLoaded ? renderMap() : /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 35\n  }, this);\n}\n_s(App, \"ssip+Uy9VcsolHUNjpn9QiG6XKw=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","GoogleMap","useJsApiLoader","LoadingSpinner","jsxDEV","_jsxDEV","options","zoomControlOptions","position","App","_s","isLoaded","loadError","googleMapsApiKey","children","fileName","_jsxFileName","lineNumber","columnNumber","onLoad","mapInstance","renderMap","_c","$RefreshReg$"],"sources":["/Users/adillon/Desktop/rbrfinder/src/App.js"],"sourcesContent":["import './App.css';\nimport React from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nimport LoadingSpinner from 'react-loading';\n\nconst options = {\n  zoomControlOptions: {\n    position: 'right-center',\n    // ...otherOptions\n  }\n};\n\nfunction App() {\n  const { isLoaded, loadError } = useJsApiLoader({\n    googleMapsApiKey: \"AIzaSyDbPZdbJjDgRUObIF1iL1x50awNHPIU2jI\" // Replace with your API key\n    // ...otherOptions\n  });\n\n  if (loadError) {\n    return <div>Map cannot be loaded right now, sorry.</div>;\n  }\n\n  const onLoad = (mapInstance) => {\n    // do something with map Instance\n  };\n\n  const renderMap = () => {\n    return (\n      <GoogleMap options={options} onLoad={onLoad}>\n        {/* Your map components */}\n      </GoogleMap>\n    );\n  };\n\n  return isLoaded ? renderMap() : <LoadingSpinner />;\n}\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,cAAc,QAAQ,wBAAwB;AAClE,OAAOC,cAAc,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,OAAO,GAAG;EACdC,kBAAkB,EAAE;IAClBC,QAAQ,EAAE;IACV;EACF;AACF,CAAC;;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM;IAAEC,QAAQ;IAAEC;EAAU,CAAC,GAAGV,cAAc,CAAC;IAC7CW,gBAAgB,EAAE,yCAAyC,CAAC;IAC5D;EACF,CAAC,CAAC;;EAEF,IAAID,SAAS,EAAE;IACb,oBAAOP,OAAA;MAAAS,QAAA,EAAK;IAAsC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC1D;EAEA,MAAMC,MAAM,GAAIC,WAAW,IAAK;IAC9B;EAAA,CACD;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB,oBACEhB,OAAA,CAACJ,SAAS;MAACK,OAAO,EAAEA,OAAQ;MAACa,MAAM,EAAEA;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEjC,CAAC;EAEhB,CAAC;EAED,OAAOP,QAAQ,GAAGU,SAAS,CAAC,CAAC,gBAAGhB,OAAA,CAACF,cAAc;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpD;AAACR,EAAA,CAvBQD,GAAG;EAAA,QACsBP,cAAc;AAAA;AAAAoB,EAAA,GADvCb,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}