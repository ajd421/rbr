{"ast":null,"code":"var _jsxFileName = \"/Users/adillon/Desktop/rbrfinder/src/App.js\",\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  zoomControlOptions: {\n    position: google.maps.ControlPosition.RIGHT_CENTER // 'right-center' ,\n    // ...otherOptions\n  }\n};\n\nfunction MyComponent() {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    isLoaded,\n    loadError\n  } = useJsApiLoader({\n    googleMapsApiKey: \"YOUR_API_KEY\" // ,\n    // ...otherOptions\n  });\n\n  const renderMap = () => {\n    _s();\n    // wrapping to a function is useful in case you want to access `window.google`\n    // to eg. setup options or create latLng object, it won't be available otherwise\n    // feel free to render directly if you don't need that\n    const onLoad = React.useCallback(function onLoad(mapInstance) {\n      // do something with map Instance\n    });\n    return /*#__PURE__*/_jsxDEV(GoogleMap, {\n      options: options,\n      onLoad: onLoad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  };\n  _s(renderMap, \"xXS5vrvRJMHimxcrTL5NlYPQdEM=\");\n  if (loadError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Map cannot be loaded right now, sorry.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n  return isLoaded ? renderMap() : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 35\n  }, this);\n}\n_s2(MyComponent, \"ssip+Uy9VcsolHUNjpn9QiG6XKw=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = MyComponent;\nvar _c;\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["React","GoogleMap","useJsApiLoader","jsxDEV","_jsxDEV","options","zoomControlOptions","position","google","maps","ControlPosition","RIGHT_CENTER","MyComponent","_s2","_s","$RefreshSig$","isLoaded","loadError","googleMapsApiKey","renderMap","onLoad","useCallback","mapInstance","fileName","_jsxFileName","lineNumber","columnNumber","children","Spinner","_c","$RefreshReg$"],"sources":["/Users/adillon/Desktop/rbrfinder/src/App.js"],"sourcesContent":["import React from 'react'\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api'\n\nconst options = {\n  zoomControlOptions: {\n    position: google.maps.ControlPosition.RIGHT_CENTER // 'right-center' ,\n    // ...otherOptions\n  }\n}\n\nfunction MyComponent() {\n  const { isLoaded, loadError } = useJsApiLoader({\n    googleMapsApiKey: \"YOUR_API_KEY\" // ,\n    // ...otherOptions\n  })\n\n  const renderMap = () => {\n    // wrapping to a function is useful in case you want to access `window.google`\n    // to eg. setup options or create latLng object, it won't be available otherwise\n    // feel free to render directly if you don't need that\n    const onLoad = React.useCallback(\n      function onLoad (mapInstance) {\n        // do something with map Instance\n      }\n    )\n    return <GoogleMap\n      options={options}\n      onLoad={onLoad}\n    >\n      {\n        // ...Your map components\n      }\n    </GoogleMap>\n  }\n\n  if (loadError) {\n    return <div>Map cannot be loaded right now, sorry.</div>\n  }\n\n  return isLoaded ? renderMap() : <Spinner />\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,cAAc,QAAQ,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,OAAO,GAAG;EACdC,kBAAkB,EAAE;IAClBC,QAAQ,EAAEC,MAAM,CAACC,IAAI,CAACC,eAAe,CAACC,YAAY,CAAC;IACnD;EACF;AACF,CAAC;;AAED,SAASC,WAAWA,CAAA,EAAG;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACrB,MAAM;IAAEC,QAAQ;IAAEC;EAAU,CAAC,GAAGf,cAAc,CAAC;IAC7CgB,gBAAgB,EAAE,cAAc,CAAC;IACjC;EACF,CAAC,CAAC;;EAEF,MAAMC,SAAS,GAAGA,CAAA,KAAM;IAAAL,EAAA;IACtB;IACA;IACA;IACA,MAAMM,MAAM,GAAGpB,KAAK,CAACqB,WAAW,CAC9B,SAASD,MAAMA,CAAEE,WAAW,EAAE;MAC5B;IAAA,CAEJ,CAAC;IACD,oBAAOlB,OAAA,CAACH,SAAS;MACfI,OAAO,EAAEA,OAAQ;MACjBe,MAAM,EAAEA;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKN,CAAC;EACd,CAAC;EAAAZ,EAAA,CAjBKK,SAAS;EAmBf,IAAIF,SAAS,EAAE;IACb,oBAAOb,OAAA;MAAAuB,QAAA,EAAK;IAAsC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC1D;EAEA,OAAOV,QAAQ,GAAGG,SAAS,CAAC,CAAC,gBAAGf,OAAA,CAACwB,OAAO;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC7C;AAACb,GAAA,CA9BQD,WAAW;EAAA,QACcV,cAAc;AAAA;AAAA2B,EAAA,GADvCjB,WAAW;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}