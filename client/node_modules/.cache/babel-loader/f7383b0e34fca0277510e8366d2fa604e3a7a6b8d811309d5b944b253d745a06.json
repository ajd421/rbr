{"ast":null,"code":"var _jsxFileName = \"/Users/adillon/Desktop/rbrfinder/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '400px',\n  height: '400px'\n};\nconst center = {\n  lat: -3.745,\n  lng: -38.523\n};\nfunction MyComponent() {\n  _s();\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    googleMapsApiKey: \"YOUR_API_KEY\",\n    // Replace with your API key\n    id: 'google-map-script',\n    version: 'weekly'\n  });\n  const [map, setMap] = useState < google.maps.Map | null > null;\n  const onLoad = useCallback(function callback(map) {\n    // This is just an example of getting and using the map instance!!! don't just blindly copy!\n    const bounds = new window.google.maps.LatLngBounds(center);\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  const onUnmount = useCallback(function callback() {\n    setMap(null);\n  }, []);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 10,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(MyComponent, \"CmvH3JU217qXt4dSbEuzOK4OVwY=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = MyComponent;\nexport default _c2 = /*#__PURE__*/React.memo(MyComponent);\nvar _c, _c2;\n$RefreshReg$(_c, \"MyComponent\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useCallback","useState","GoogleMap","useJsApiLoader","Fragment","_Fragment","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","MyComponent","_s","isLoaded","googleMapsApiKey","id","version","map","setMap","google","maps","Map","onLoad","callback","bounds","window","LatLngBounds","fitBounds","onUnmount","mapContainerStyle","zoom","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","memo","$RefreshReg$"],"sources":["/Users/adillon/Desktop/rbrfinder/src/App.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '400px',\n  height: '400px'\n};\n\nconst center = {\n  lat: -3.745,\n  lng: -38.523\n};\n\nfunction MyComponent() {\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: \"YOUR_API_KEY\", // Replace with your API key\n    id: 'google-map-script',\n    version: 'weekly'\n  });\n\n  const [map, setMap] = useState<google.maps.Map | null>(null);\n\n  const onLoad = useCallback(function callback(map: google.maps.Map) {\n    // This is just an example of getting and using the map instance!!! don't just blindly copy!\n    const bounds = new window.google.maps.LatLngBounds(center);\n    map.fitBounds(bounds);\n\n    setMap(map);\n  }, []);\n\n  const onUnmount = useCallback(function callback() {\n    setMap(null);\n  }, []);\n\n  return isLoaded ? (\n    <GoogleMap\n      mapContainerStyle={containerStyle}\n      center={center}\n      zoom={10}\n      onLoad={onLoad}\n      onUnmount={onUnmount}\n    >\n      {/* Child components, such as markers, info windows, etc. */}\n      <></>\n    </GoogleMap>\n  ) : <></>;\n}\n\nexport default React.memo(MyComponent);"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACpD,SAASC,SAAS,EAAEC,cAAc,QAAQ,wBAAwB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,CAAC,KAAK;EACXC,GAAG,EAAE,CAAC;AACR,CAAC;AAED,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAS,CAAC,GAAGb,cAAc,CAAC;IAClCc,gBAAgB,EAAE,cAAc;IAAE;IAClCC,EAAE,EAAE,mBAAmB;IACvBC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGpB,QAAQ,GAACqB,MAAM,CAACC,IAAI,CAACC,GAAG,GAAG,IAAI,GAAE,IAAK;EAE5D,MAAMC,MAAM,GAAGzB,WAAW,CAAC,SAAS0B,QAAQA,CAACN,GAAoB,EAAE;IACjE;IACA,MAAMO,MAAM,GAAG,IAAIC,MAAM,CAACN,MAAM,CAACC,IAAI,CAACM,YAAY,CAAClB,MAAM,CAAC;IAC1DS,GAAG,CAACU,SAAS,CAACH,MAAM,CAAC;IAErBN,MAAM,CAACD,GAAG,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,SAAS,GAAG/B,WAAW,CAAC,SAAS0B,QAAQA,CAAA,EAAG;IAChDL,MAAM,CAAC,IAAI,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOL,QAAQ,gBACbT,OAAA,CAACL,SAAS;IACR8B,iBAAiB,EAAExB,cAAe;IAClCG,MAAM,EAAEA,MAAO;IACfsB,IAAI,EAAE,EAAG;IACTR,MAAM,EAAEA,MAAO;IACfM,SAAS,EAAEA,SAAU;IAAAG,QAAA,eAGrB3B,OAAA,CAAAF,SAAA,mBAAI;EAAC;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC,gBACV/B,OAAA,CAAAF,SAAA,mBAAI,CAAC;AACX;AAACU,EAAA,CAjCQD,WAAW;EAAA,QACGX,cAAc;AAAA;AAAAoC,EAAA,GAD5BzB,WAAW;AAmCpB,eAAA0B,GAAA,gBAAezC,KAAK,CAAC0C,IAAI,CAAC3B,WAAW,CAAC;AAAC,IAAAyB,EAAA,EAAAC,GAAA;AAAAE,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAF,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}