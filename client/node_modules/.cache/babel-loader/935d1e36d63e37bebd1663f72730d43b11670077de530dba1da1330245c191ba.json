{"ast":null,"code":"var _jsxFileName = \"/Users/adillon/Desktop/rbrfinder/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nimport React from \"react\";\nimport LoadingSpinner from 'react-loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  zoomControlOptions: {\n    position: 'right-center'\n    // ...otherOptions\n  }\n};\n\nfunction useMapLoader() {\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    options: options,\n    onLoad: onLoad\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\nfunction App() {\n  _s();\n  const {\n    isLoaded,\n    loadError\n  } = useJsApiLoader({\n    googleMapsApiKey: \"YOUR_API_KEY\" // Replace with your API key\n    // ...otherOptions\n  });\n\n  if (loadError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Map cannot be loaded right now, sorry.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n  const onLoad = mapInstance => {\n    // do something with map Instance\n  };\n  return isLoaded ? useMapLoader() : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 38\n  }, this);\n}\n_s(App, \"q9C5d31aCrSFAfQD5MzSzbh4yws=\", false, function () {\n  return [useJsApiLoader, useMapLoader];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","GoogleMap","useJsApiLoader","React","LoadingSpinner","jsxDEV","_jsxDEV","options","zoomControlOptions","position","useMapLoader","onLoad","fileName","_jsxFileName","lineNumber","columnNumber","App","_s","isLoaded","loadError","googleMapsApiKey","children","mapInstance","Spinner","_c","$RefreshReg$"],"sources":["/Users/adillon/Desktop/rbrfinder/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { GoogleMap, useJsApiLoader} from '@react-google-maps/api'\nimport React from \"react\";\nimport LoadingSpinner from 'react-loading';\n\nconst options = {\n  zoomControlOptions: {\n    position: 'right-center',\n    // ...otherOptions\n  }\n};\n\nfunction useMapLoader() {\n  return (\n    <GoogleMap options={options} onLoad={onLoad}>\n      {/* Your map components */}\n    </GoogleMap>\n  );\n}\n\nfunction App() {\n  const { isLoaded, loadError } = useJsApiLoader({\n    googleMapsApiKey: \"YOUR_API_KEY\" // Replace with your API key\n    // ...otherOptions\n  });\n\n  if (loadError) {\n    return <div>Map cannot be loaded right now, sorry.</div>;\n  }\n\n  const onLoad = (mapInstance) => {\n    // do something with map Instance\n  };\n\n  return isLoaded ? useMapLoader() : <Spinner />;\n}\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,SAAS,EAAEC,cAAc,QAAO,wBAAwB;AACjE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,OAAO,GAAG;EACdC,kBAAkB,EAAE;IAClBC,QAAQ,EAAE;IACV;EACF;AACF,CAAC;;AAED,SAASC,YAAYA,CAAA,EAAG;EACtB,oBACEJ,OAAA,CAACL,SAAS;IAACM,OAAO,EAAEA,OAAQ;IAACI,MAAM,EAAEA;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEjC,CAAC;AAEhB;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM;IAAEC,QAAQ;IAAEC;EAAU,CAAC,GAAGjB,cAAc,CAAC;IAC7CkB,gBAAgB,EAAE,cAAc,CAAC;IACjC;EACF,CAAC,CAAC;;EAEF,IAAID,SAAS,EAAE;IACb,oBAAOb,OAAA;MAAAe,QAAA,EAAK;IAAsC;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC1D;EAEA,MAAMJ,MAAM,GAAIW,WAAW,IAAK;IAC9B;EAAA,CACD;EAED,OAAOJ,QAAQ,GAAGR,YAAY,CAAC,CAAC,gBAAGJ,OAAA,CAACiB,OAAO;IAAAX,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAChD;AAACE,EAAA,CAfQD,GAAG;EAAA,QACsBd,cAAc,EAa5BQ,YAAY;AAAA;AAAAc,EAAA,GAdvBR,GAAG;AAiBZ,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}