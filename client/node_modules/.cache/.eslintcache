[{"/Users/adillon/rbrserv/rbrfinder/src/index.js":"1","/Users/adillon/rbrserv/rbrfinder/src/App.js":"2","/Users/adillon/rbrserv/rbrfinder/src/reportWebVitals.js":"3"},{"size":535,"mtime":1685996962018,"results":"4","hashOfConfig":"5"},{"size":4345,"mtime":1686154908130,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1685994409703,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ybqb44",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/adillon/rbrserv/rbrfinder/src/index.js",[],[],"/Users/adillon/rbrserv/rbrfinder/src/App.js",["18","19","20","21"],[],"import './App.css';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { GoogleMap, useJsApiLoader, MarkerF, BicyclingLayerF, InfoWindowF} from '@react-google-maps/api';\n\n\nconst containerStyle = {\n  width: '100vw',\n  height: '100vh',\n};\n\nconst center = {\n  lat: 29.717305869520487, \n  lng: -95.40327808240264\n};\n\nconst pos = {\n  lat: 29.7187296,\n  lng: -95.4035656\n}\n\nconst printMarker = marker => {\n  console.log('marker: ', marker);\n}\n\nconst parseWKTToLatLng = (wkt) => {\n  const regex = /POINT \\(([-\\d.]+) ([-\\d.]+)\\)/;\n  const match = wkt.match(regex);\n  if (match) {\n    return { lat: parseFloat(match[2]), lng: parseFloat(match[1]) };\n  }\n  return null;\n};\n\nfunction Header() {\n  return (\n    <div className='header'>\n      <h1>Rice University's Bike Rack Finder</h1>\n      <h3>Looking for a bike rack next to a campus building? Look no further</h3>\n    </div>\n  );\n}\n\nfunction MyComponent() {\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: process.env.REACT_APP_API_KEY, \n    id: 'google-map-script',\n    version: 'weekly'\n  });\n\n  const [map, setMap] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [data, setData] = useState(null);\n  const [openInfoWindowIndex, setOpenInfoWindowIndex] = useState(null);\n\n  useEffect(() => {\n    fetch(\"http://localhost:3001/data\")\n      .then((res) => res.json())\n      .then((data) => {\n        // Add additional properties to each marker\n      const markersWithAdditionalInfo = data.map((marker) => ({\n        ...marker,\n        imageUrl: 'https://transportation.rice.edu/sites/g/files/bxs3961/files/inline-images/SouthServery1.jpg',\n        availabilityStatus: 'Available',\n        lastUpdated: '5 minutes ago',\n        totalSpots: 10,\n        peakHours: '12 PM - 2 PM',\n        securityRating: 'High',\n      }));\n        //console.log('markersWithAdditionalInfo:', markersWithAdditionalInfo);\n        setData(markersWithAdditionalInfo);\n        setMarkers(markersWithAdditionalInfo)\n      });\n  }, []);\n\n  const handleMarkerClick = (index) => {\n    setOpenInfoWindowIndex(index);\n  };\n\n  const onLoad = useCallback(function callback(map) {\n    // This is just an example of getting and using the map instance!!! don't just blindly copy!\n    const bounds = new window.google.maps.LatLngBounds(center);\n    map.setZoom(16);\n\n    setMap(map);\n  }, []);\n\n  const onUnmount = useCallback(function callback() {\n    setMap(null);\n  }, []);\n\n  return (\n    <div>\n      <Header />\n      {isLoaded ? (\n        <GoogleMap\n          mapContainerStyle={containerStyle}\n          center={center}\n          zoom={16}\n          onLoad={onLoad}\n          onUnmount={onUnmount}\n        >\n          <BicyclingLayerF\n          />\n          {markers.map((marker, index) => {\n            const position = parseWKTToLatLng(marker.WKT);\n            if (position) {\n              return (\n                <MarkerF\n                icon={\"https://mt.google.com/vt/icon/name=icons/onion/SHARED-mymaps-container_4x.png,icons/onion/1522-bicycle_4x.png\"}\n                onLoad={printMarker}\n                key={index}\n                position={position}\n                title={marker.name}\n                onClick={() => handleMarkerClick(index)}\n                >\n                  {openInfoWindowIndex === index && ( // Conditionally render the InfoWindow\n                    <InfoWindowF onCloseClick={() => setOpenInfoWindowIndex(null)}>\n                       <div>\n                      <h3>{marker.name}</h3>\n                      <p>GPS location: {position.lat}, {position.lng}</p>\n                      <img src={marker.imageUrl} alt=\"Bike rack\" style={{ width: '200px', height: 'auto' }} />\n                      <p>Availability Status: {marker.availabilityStatus} (last updated {marker.lastUpdated})</p>\n                      <p>Total Spots: {marker.totalSpots}</p>\n                      <p>Peak Hours: {marker.peakHours}</p>\n                      <p>Security Rating: {marker.securityRating}</p>\n                    </div>\n                    </InfoWindowF>\n                  )}\n                </MarkerF>\n              );\n            }\n            return null; // Return null if the WKT string cannot be parsed\n          })}\n        </GoogleMap>\n      ) : (\n        <div>Loading...</div>\n      )}\n    </div>\n  );\n}\n\nexport default React.memo(MyComponent);","/Users/adillon/rbrserv/rbrfinder/src/reportWebVitals.js",[],[],{"ruleId":"22","severity":1,"message":"23","line":16,"column":7,"nodeType":"24","messageId":"25","endLine":16,"endColumn":10},{"ruleId":"22","severity":1,"message":"26","line":50,"column":10,"nodeType":"24","messageId":"25","endLine":50,"endColumn":13},{"ruleId":"22","severity":1,"message":"27","line":52,"column":10,"nodeType":"24","messageId":"25","endLine":52,"endColumn":14},{"ruleId":"22","severity":1,"message":"28","line":81,"column":11,"nodeType":"24","messageId":"25","endLine":81,"endColumn":17},"no-unused-vars","'pos' is assigned a value but never used.","Identifier","unusedVar","'map' is assigned a value but never used.","'data' is assigned a value but never used.","'bounds' is assigned a value but never used."]